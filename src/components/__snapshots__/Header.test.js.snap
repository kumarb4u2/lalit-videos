// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match snapshot in default state 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ForwardRef
          className="navbar-brand"
          to="/"
        >
          Simple Youtube
        </ForwardRef>,
        <div
          className="collapse navbar-collapse"
          id="navbarSupportedContent"
        >
          <ul
            className="navbar-nav mr-auto"
          >
            <li
              className="nav-item active"
            >
              <Link
                className="navbar-brand"
                replace={false}
                to="/"
              >
                Home
              </Link>
            </li>
          </ul>
        </div>,
        <Link
          className="btn btn-primary"
          replace={false}
          to="/upload"
        >
          Upload
        </Link>,
      ],
      "className": "navbar navbar-expand-lg navbar-light bg-light",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Simple Youtube",
          "className": "navbar-brand",
          "to": "/",
        },
        "ref": null,
        "rendered": "Simple Youtube",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": true,
            "rules": Array [
              "
  font-weight: 500;
  color: red !important;
",
            ],
          },
          "displayName": "Styled(Link)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ul
            className="navbar-nav mr-auto"
          >
            <li
              className="nav-item active"
            >
              <Link
                className="navbar-brand"
                replace={false}
                to="/"
              >
                Home
              </Link>
            </li>
          </ul>,
          "className": "collapse navbar-collapse",
          "id": "navbarSupportedContent",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <li
              className="nav-item active"
            >
              <Link
                className="navbar-brand"
                replace={false}
                to="/"
              >
                Home
              </Link>
            </li>,
            "className": "navbar-nav mr-auto",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Link
                className="navbar-brand"
                replace={false}
                to="/"
              >
                Home
              </Link>,
              "className": "nav-item active",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Home",
                "className": "navbar-brand",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": "Home",
              "type": [Function],
            },
            "type": "li",
          },
          "type": "ul",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Upload",
          "className": "btn btn-primary",
          "replace": false,
          "to": "/upload",
        },
        "ref": null,
        "rendered": "Upload",
        "type": [Function],
      },
    ],
    "type": "nav",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ForwardRef
            className="navbar-brand"
            to="/"
          >
            Simple Youtube
          </ForwardRef>,
          <div
            className="collapse navbar-collapse"
            id="navbarSupportedContent"
          >
            <ul
              className="navbar-nav mr-auto"
            >
              <li
                className="nav-item active"
              >
                <Link
                  className="navbar-brand"
                  replace={false}
                  to="/"
                >
                  Home
                </Link>
              </li>
            </ul>
          </div>,
          <Link
            className="btn btn-primary"
            replace={false}
            to="/upload"
          >
            Upload
          </Link>,
        ],
        "className": "navbar navbar-expand-lg navbar-light bg-light",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Simple Youtube",
            "className": "navbar-brand",
            "to": "/",
          },
          "ref": null,
          "rendered": "Simple Youtube",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  font-weight: 500;
  color: red !important;
",
              ],
            },
            "displayName": "Styled(Link)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ul
              className="navbar-nav mr-auto"
            >
              <li
                className="nav-item active"
              >
                <Link
                  className="navbar-brand"
                  replace={false}
                  to="/"
                >
                  Home
                </Link>
              </li>
            </ul>,
            "className": "collapse navbar-collapse",
            "id": "navbarSupportedContent",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <li
                className="nav-item active"
              >
                <Link
                  className="navbar-brand"
                  replace={false}
                  to="/"
                >
                  Home
                </Link>
              </li>,
              "className": "navbar-nav mr-auto",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Link
                  className="navbar-brand"
                  replace={false}
                  to="/"
                >
                  Home
                </Link>,
                "className": "nav-item active",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Home",
                  "className": "navbar-brand",
                  "replace": false,
                  "to": "/",
                },
                "ref": null,
                "rendered": "Home",
                "type": [Function],
              },
              "type": "li",
            },
            "type": "ul",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Upload",
            "className": "btn btn-primary",
            "replace": false,
            "to": "/upload",
          },
          "ref": null,
          "rendered": "Upload",
          "type": [Function],
        },
      ],
      "type": "nav",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
